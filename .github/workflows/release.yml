name: Build and Release
on:
  release:
    types: [published]
  workflow_dispatch:
permissions:
  contents: write
jobs:
  build:
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        include:
          - os: linux
            arch: x64
            runner: ubuntu-latest
          - os: linux
            arch: arm64
            runner: ubuntu-latest
          - os: windows
            arch: x64
            runner: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install CMake
        uses: jwlawson/actions-setup-cmake@v2
      - name: Install Ninja
        uses: seanmiddleditch/gha-setup-ninja@v4
        if: matrix.os == 'linux'
      - name: Configure CMake
        run: |
          mkdir build
          cd build
          if [ "${{ matrix.os }}" = "windows" ]; then
            cmake .. -DCMAKE_BUILD_TYPE=Release
          else
            cmake .. -G Ninja -DCMAKE_BUILD_TYPE=Release
          fi
        shell: bash
      - name: Build
        run: |
          cd build
          cmake --build . --config Release
        shell: bash
      - name: Prepare zip structure
        run: |
          mkdir dist
          EXT=""
          if [ "${{ matrix.os }}" = "windows" ]; then
            EXT=".exe"
          fi
          
          if [ -f "build/probescript${EXT}" ]; then
            cp build/probescript${EXT} dist/
          elif [ -f "build/Release/probescript${EXT}" ]; then
            cp build/Release/probescript${EXT} dist/
          fi
          
          cp src/installer/installation.txt dist/
          if [ "${{ matrix.os }}" = "windows" ]; then
            cp src/installer/probescript-setup.bat dist/
          else
            cp src/installer/probescript-setup.sh dist/
          fi
        shell: bash
      - name: Zip files
        run: |
          cd dist
          FILENAME="probescript-${{ matrix.os }}-${{ matrix.arch }}.zip"
          if [ "${{ matrix.os }}" = "windows" ]; then
            powershell Compress-Archive -Path probescript*,installation.txt -DestinationPath "$FILENAME"
          else
            zip "$FILENAME" probescript* installation.txt
          fi
        shell: bash
      - name: Upload zipped asset to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: dist/*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}